#include"task_4.h"

//функция для  задания № 4
auto Task_4 () -> void {

    std::cout << std::setw(30) << std::right<< "Задание 4.a)" << '\n';
    std::cout << "а) Реализуйте нахождение факториала числа (n!),\n"
                 "заданного пользователем с помощью\n"
                 "итераций и с помощью рекурсии\n"
                 "(две программы, выполняющие одну и ту же задачу).\n\n";

    short b; // переменная для ввода пользователем
    short a{65}; // переменная для проверки условия ввода

    do {
        std::cout << "Введите целое число но, не более 65: ";
        b = Type_Thecking (b); // проверка пользовательского ввода
        if (b <= a)  break;
    }
    while (true);

    // вызов функции для нахождения Факториала с помощью итерации
    std::cout << "Факториал найденный с помощью итерации = " << FacItr (b) << '\n';

    // вызов функции для нахождения Факториала с помощью рекурсии
    std::cout << "Факториал найденный с помощью рекурсии = " << FacRec (b) << '\n';

    std::cout << std::setw(30) << std::right<< "\vЗадание 4.б)" << '\n';
    std::cout << "В лекции о матрицах приведена программа,\n"
                 "которая рекурсивно ищет число Фибоначчи,\n"
                 "соответствующее заданному пользователем номеру.\n"
                 "Реализуйте выполнение этой же задачи с помощью\n"
                 "итераций (циклов).\n\n";

    // выызов функции для нахождения числа Фибоначчи с помощью итерации
    Fibonacci();

    std::cout << std::setw(29) << std::right<< "\vЗадание 4.c)" << '\n';
    std::cout << "Введите целое число: ";
    b = Type_Thecking (b);  //проверка на коректность ввода
    Pyramid(b);
}



